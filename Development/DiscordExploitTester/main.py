import argparse, requests, json, sys

__version__	= "1.0"

banner = '''\033[93m
 ____  _           _       _ _
|  _ \(_)___ _ __ | | ___ (_) |_
| | | | / __| '_ \\| |/ _ \\| | __|
| |_| | \\__ \\ |_) | | (_) | | |_   \033[91mVersion: {}\033[93m
|____/|_|___/ .__/|_|\\___/|_|\\__|
            |_| \033[94m Made by Passiv-e\033[91m ;)\033[97m
'''.format(__version__)

def main():
	print(banner)
	parser = argparse.ArgumentParser(usage=str(sys.argv[0])+' \033[90m[options]\033[97m')
	parser.add_argument('-u', '--url', help='url to spam', dest='url',metavar='')
	parser.add_argument('-t', '--token', help='token for auth', dest='token',metavar='',type=str)
	parser.add_argument('-j', '--json', help='all the sp00ky json', dest='json',metavar='')
	parser.add_argument('-x', '--type', help='type of request (patch/post) etc.', dest='rq',metavar='')
	args = parser.parse_args()
	types = ["post","get","delete","patch"]
	if args.url is None: quit("\033[91mSupply a url\033[97m")
	if args.token is None: headers = {}
	else: headers = {"Authorization": args.token}
	if args.json is None: jsoon = {}
	else: jsoon = json.loads(args.json)
	if args.rq not in types: quit("\033[91mPlease make sure to use lowercase chars!")
	print("\n\033[94mTesting url: "+args.url)
	while True:
		# Spaget code
		if args.rq == "patch":
			x=requests.patch(url=args.url,headers=headers,json=jsoon)
		if args.rq == "post":
			x=requests.post(url=args.url,headers=headers,json=jsoon)
		if args.rq == "get":
			x=requests.get(url=args.url,headers=headers,json=jsoon)
		if args.rq == "delete":
			x=requests.delete(url=args.url,headers=headers,json=jsoon)
		print(x.text)
		print(x.status_code)
if __name__ == '__main__':
	main()
